<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util-4.0.xsd">
		
	<context:property-placeholder location="classpath:mysql.properties"/>
	
 	<!-- 数据库连接 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<!-- <property name="driverClassName" value="${jdbc.driverClassName}" /> 
			<property name="url" value="${jdbc.url}" /> 
			<property name="username" value="${jdbc.username}"/> 
			<property name="password" value="${jdbc.password}" /> -->
		<property name="driverClassName">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<!-- 连接池启动时创建的初始化连接数量（不设定即为0） -->
		<property name="initialSize">
			<value>${mysql.connectionPool.initialSize}</value>
		</property>
		<!-- 连接池中可同时连接的最大的连接数（默认值为8) -->
		<property name="maxActive">
			<value>${mysql.connectionPool.maxActive}</value>
		</property>
		<!-- 连接池中最小的空闲的连接数，低于这个数量会被创建新的连接 -->
		<property name="minIdle">
			<value>${mysql.connectionPool.minIdle}</value>
		</property>
		<!-- 连接池中最大的空闲的连接数，超过的空闲连接将被释放 -->
		<property name="maxIdle">
			<value>${mysql.connectionPool.maxIdle}</value>
		</property>
		<!-- 最大等待时间，当没有可用连接时，连接池等待连接释放的最大时间，超过该时间限制会抛出异常 -->
		<property name="maxWait">
			<value>${mysql.connectionPool.maxWait}</value>
		</property>
		<!-- removeAbandoned属性说明 -->
		<!-- 超过removeAbandonedTimeout时间后，是否进 行没用连接（废弃）的回收（默认为false) -->
		<!-- 举例当maxActive=20, 活动连接为18,空闲连接为1时可以触发"removeAbandoned".但是活动连接只有在没有被使用的时间超 
			过"removeAbandonedTimeout(这里默认为300秒)"时才被回收 -->
		<!-- 遇到数据库死锁。以前遇到过后端存储过程做了锁表操作，导致前台集群中连接池全都被block住，后续的业务处理因为拿不到链接所有都处理失败了。 -->
		<property name="removeAbandoned">
			<value>${mysql.connectionPool.removeAbandoned}</value>
		</property>
	</bean>
 
	<!-- MyBatis SqlSessionFactoryBean 配置 -->
	<bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:com/srdz/mapper/*.xml"/>
        <!-- 配置包别名 -->
        <property name="typeAliasesPackage" value="com.srdz.entity.*"/>
		<property name="plugins">
			<array>
				<!-- 分页插件配置 -->
			</array>
		</property>
	</bean>
	  <!-- MyBatis 动态扫描  -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       <!--  <property name="basePackage" value="com.baomidou.springmvc.mapper"/> -->
         <property name="basePackage" value="com.srdz.dao"/>
    </bean>
	 <!-- 对数据源进行事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 支持注解式事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>